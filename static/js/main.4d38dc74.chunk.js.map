{"version":3,"sources":["api/getData.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["url","getUsers","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","users","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","apply","this","arguments","getPosts","_ref2","_callee2","posts","_context2","getComments","_ref3","_callee3","comments","_context3","preparedData","_ref4","_callee4","filteredPostList","_context4","map","post","objectSpread","user","find","id","userId","filter","comment","postId","User","react_default","createElement","Fragment","className","name","email","address","city","street","suite","Comment","body","CommentList","components_Comment","key","Post","question","components_User","title","Accordion","defaultActiveKey","Card","Toggle","as","Header","eventKey","Collapse","Body","components_CommentList","PostList","postsList","components_Post","data","App","state","visiblePosts","isloaded","isLoading","handleClick","_this","setState","setTimeout","onSearchPosts","event","searchField","target","value","prevState","join","toLowerCase","includes","postsWithUsers","htmlFor","onChange","type","placeholder","components_PostList","onClick","Spinner","animation","role","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4d38dc74.chunk.js","sourcesContent":["const url = 'https://jsonplaceholder.typicode.com';\n\nexport const getUsers = async() => {\n  const response = await fetch(`${url}/users`);\n  const users = await response.json();\n\n  return users;\n};\n\nexport const getPosts = async() => {\n  const response = await fetch(`${url}/posts`);\n  const posts = await response.json();\n\n  return posts;\n};\n\nexport const getComments = async() => {\n  const response = await fetch(`${url}/comments`);\n  const comments = await response.json();\n\n  return comments;\n};\n\nconst preparedData = async() => {\n  const users = await getUsers();\n  const posts = await getPosts();\n  const comments = await getComments();\n\n  const filteredPostList = posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }));\n\n  return filteredPostList;\n};\n\nexport default preparedData;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <>\n    <div className=\"user\">\n      <h2>{user.name}</h2>\n      <h6>{user.email}</h6>\n      <div>\n        {user.address.city}\n        {user.address.street}\n        <p>\n          zipcode:\n          {user.address.suite}\n        </p>\n      </div>\n    </div>\n  </>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.number,\n    email: PropTypes.string,\n    address: PropTypes.object,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => (\n  <div>\n    <div className=\"comment-writer\">\n      <b>{comment.name}</b>\n      <span className=\"italic\">\n        (email:\n        {comment.email}\n)\n      </span>\n    </div>\n    <p className=\"comment-body\">{comment.body}</p>\n    <p>--- --- ---</p>\n  </div>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n    postId: PropTypes.number,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <>\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))}\n  </>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion, Card } from 'react-bootstrap';\n\nimport User from './User';\n\nimport CommentList from './CommentList';\n\nconst Post = ({ question }) => (\n  <div className=\"post-item\">\n    <div className=\"question-block\">\n      <User user={question.user} key={question.user.id} />\n      <div className=\"question\">\n        <h4>\n          <p>Question:</p>\n          {question.title}\n        </h4>\n        <article>{question.body}</article>\n      </div>\n    </div>\n\n    <div className=\"comments\">\n      <h4>Answers:</h4>\n      <div className=\"comment-item\">\n        <hr />\n        <Accordion defaultActiveKey=\"1\">\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              Click for reading comments\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                <hr />\n                <CommentList comments={question.comments} />\n                <hr />\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n\n        <hr />\n      </div>\n    </div>\n  </div>\n);\n\nPost.propTypes = {\n  question: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    userId: PropTypes.number,\n    user: PropTypes.object,\n    comments: PropTypes.object,\n  }).isRequired,\n\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Post from './Post';\n\nconst PostList = ({ postsList }) => (\n  <main className=\"posts-box\">\n    {postsList.map(post => (\n      <Post question={post} key={post.id} />\n    ))}\n  </main>\n);\n\nPostList.propTypes = {\n  postsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\n// import { connect } from 'react-redux';\nimport { Spinner } from \"react-bootstrap\";\nimport preparedData from './api/getData';\nimport PostList from './components/PostList';\n\nconst data = async() => {\n  const response = await preparedData();\n  return response;\n};\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    visiblePosts: [],\n    isloaded: false,\n    isLoading: false,\n  };\n\n  async componentDidMount() {\n    const postsWithUsers = await data();\n\n    this.setState({\n      visiblePosts: postsWithUsers,\n      posts: postsWithUsers,\n    });\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isloaded: true,\n      });\n    }, 1200);\n  };\n\n  onSearchPosts = (event) => {\n    const searchField = event.target.value;\n\n    this.setState(prevState => ({\n      visiblePosts: prevState.posts.filter(post => [post.title, post.body]\n        .join('')\n        .toLowerCase()\n        .includes(searchField.toLowerCase())),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"text-monospace\">\n        <h1>Dynamic list of posts</h1>\n        {!this.state.isloaded ? (\n          <div className=\"button-box\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-dark\"\n              onClick={this.handleClick}\n            >\n              {!this.state.isLoading ? (\n                \"Click for load posts\"\n              ) : (\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              )}\n            </button>\n          </div>\n        ) : (\n          <>\n            <div className=\"search-box\">\n              <label className=\"search\" htmlFor=\"searchField\">\n                <input\n                  className=\"form-control\"\n                  onChange={this.onSearchPosts}\n                  type=\"input\"\n                  placeholder=\"search posts\"\n                  id=\"searchField\"\n                />\n              </label>\n            </div>\n            <PostList postsList={this.state.visiblePosts} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}